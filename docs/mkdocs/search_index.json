{
    "docs": [
        {
            "location": "/", 
            "text": "EvoBic\n\n\nEvoBic is a next-generation biclustering algorithm based on artificial intelligence (AI).\nEvoBic is probably the first algorithm capable of discovering the most challenging patterns (i.e. row-constant, column-constant, shift, scale, shift-scale and trend-preserving)\nIt is also one of the very few parallel biclustering algorithms that use at least one graphics processing unit (GPU) and is ready for big-data challenges.\n\n\nEvoBic is mainly implemented in C++11. CUDA with OpenMP used for parallelization.", 
            "title": "Home"
        }, 
        {
            "location": "/#evobic", 
            "text": "EvoBic is a next-generation biclustering algorithm based on artificial intelligence (AI).\nEvoBic is probably the first algorithm capable of discovering the most challenging patterns (i.e. row-constant, column-constant, shift, scale, shift-scale and trend-preserving)\nIt is also one of the very few parallel biclustering algorithms that use at least one graphics processing unit (GPU) and is ready for big-data challenges.  EvoBic is mainly implemented in C++11. CUDA with OpenMP used for parallelization.", 
            "title": "EvoBic"
        }, 
        {
            "location": "/installation/", 
            "text": "EvoBic prerequisites\n\n\nEvoBic requires CUDA Toolkit (7.0 or later) and C++11 environment to be installed. Please make sure that your computer may run CUDA.\n\n\nFind out your graphic card and check if it is supported on \nNVIDIA website\n.\n\n\nYou won't be able to run EvoBic if your graphic card is not supported.\n\n\nNVIDIA driver installation\n\n\nStart with installing NVIDIA driver for your graphic card.\n\n\nFind the latest NVIDIA driver at \nNVIDIA's Download Website\n\n\nCUDA Toolkit installation\n\n\nFollow NVIDIA tutorial for \nCUDA\n. Install the latest supported CUDA Toolkit for your platform.\n\n\nGCC 4.6+ installation\n\n\nWindows users may also require to install a GCC 4.6+ or newer compiler in order to run C++11 code.\nThe easiest way is downloading the \nMinGW-w64\n.\n\n\nEvoBic compilation\n\n\nIn order to prepare a binary type:\n\n\nmake\n\n\n\n\nor\n\n\nnvcc -O3 -std=c++11 --expt-extended-lambda -Xcompiler -fopenmp --default-stream per-thread  main.cxx population.cxx dataIO.cxx evobic.cu -L/usr/local/cuda/lib -lcuda -o evobic\n\n\n\n\nIf the command completed successfully, you are ready to go!", 
            "title": "Installation"
        }, 
        {
            "location": "/installation/#evobic-prerequisites", 
            "text": "EvoBic requires CUDA Toolkit (7.0 or later) and C++11 environment to be installed. Please make sure that your computer may run CUDA.  Find out your graphic card and check if it is supported on  NVIDIA website .  You won't be able to run EvoBic if your graphic card is not supported.", 
            "title": "EvoBic prerequisites"
        }, 
        {
            "location": "/installation/#nvidia-driver-installation", 
            "text": "Start with installing NVIDIA driver for your graphic card.  Find the latest NVIDIA driver at  NVIDIA's Download Website", 
            "title": "NVIDIA driver installation"
        }, 
        {
            "location": "/installation/#cuda-toolkit-installation", 
            "text": "Follow NVIDIA tutorial for  CUDA . Install the latest supported CUDA Toolkit for your platform.", 
            "title": "CUDA Toolkit installation"
        }, 
        {
            "location": "/installation/#gcc-46-installation", 
            "text": "Windows users may also require to install a GCC 4.6+ or newer compiler in order to run C++11 code.\nThe easiest way is downloading the  MinGW-w64 .", 
            "title": "GCC 4.6+ installation"
        }, 
        {
            "location": "/installation/#evobic-compilation", 
            "text": "In order to prepare a binary type:  make  or  nvcc -O3 -std=c++11 --expt-extended-lambda -Xcompiler -fopenmp --default-stream per-thread  main.cxx population.cxx dataIO.cxx evobic.cu -L/usr/local/cuda/lib -lcuda -o evobic  If the command completed successfully, you are ready to go!", 
            "title": "EvoBic compilation"
        }, 
        {
            "location": "/usage/", 
            "text": "Using Evobic\n\n\nCurrently EvoBic can be used only as a command line tool.\n\n\nIn order to build a program simply run:\n\n\n$ make\n\n\n\n\nCheck our 'input.txt' data file to see the required input file format. In order to run an example simply type:\n\n\n$ ./evobic -i input.txt\n\n\n\n\nThe basic usage of EvoBic is:\n\n\n$ ./evobic [OPTIONS]\n\n\n\n\nTo override any of default options extra arguments should be added:\n\n\nOptions:\n  -i,--input TEXT             input file (required!)\n  -n,--iterations INT         number of iterations [default: 5000]\n  -b,--biclusters INT         number of biclusters [100]\n  -x,--overlap FLOAT          overlap threshold [0.75]\n  -g,--gpus INT               number of gpus [1]\n  -a,--approx FLOAT           approximate trends acceptance ratio [0.85]\n  -m,--negative-trends INT    negative trends [1]\n  -l,--log                    is logging enabled [false]\n\n\nInput\n\n\nInput files are expected to have a row and a column headers, the values need to be separated by whitespace. \nThe current release of EvoBic analyzes files with continuous values only. EvoBic doesn't handle missing values.\nCheck our toy file (input.txt) for the required file format.\n\n\nOutputs\n\n\nEvoBic writes to its working directory two text files: [input_filename]-res and [input_filename]-blocks.\n\n\nThe first output file contains in its first line the number of detected biclusters and in consecutive lines each bicluster identifiers in the following format \n\n\nBicluster([row0 row1 ... ],[column0, column1, ...])\n\n\n\n\nThe second file extracts the actual values of the bicluster from the dataset. Its format is as follows:\n\n\nBC[bicluster_number] [number_of_rows x number_of columns]\nExtracted part of the input dataset with rows and columns labels of the bicluster.", 
            "title": "How to use"
        }, 
        {
            "location": "/usage/#using-evobic", 
            "text": "Currently EvoBic can be used only as a command line tool.  In order to build a program simply run:  $ make  Check our 'input.txt' data file to see the required input file format. In order to run an example simply type:  $ ./evobic -i input.txt  The basic usage of EvoBic is:  $ ./evobic [OPTIONS]  To override any of default options extra arguments should be added:  Options:\n  -i,--input TEXT             input file (required!)\n  -n,--iterations INT         number of iterations [default: 5000]\n  -b,--biclusters INT         number of biclusters [100]\n  -x,--overlap FLOAT          overlap threshold [0.75]\n  -g,--gpus INT               number of gpus [1]\n  -a,--approx FLOAT           approximate trends acceptance ratio [0.85]\n  -m,--negative-trends INT    negative trends [1]\n  -l,--log                    is logging enabled [false]", 
            "title": "Using Evobic"
        }, 
        {
            "location": "/usage/#input", 
            "text": "Input files are expected to have a row and a column headers, the values need to be separated by whitespace. \nThe current release of EvoBic analyzes files with continuous values only. EvoBic doesn't handle missing values.\nCheck our toy file (input.txt) for the required file format.", 
            "title": "Input"
        }, 
        {
            "location": "/usage/#outputs", 
            "text": "EvoBic writes to its working directory two text files: [input_filename]-res and [input_filename]-blocks.  The first output file contains in its first line the number of detected biclusters and in consecutive lines each bicluster identifiers in the following format   Bicluster([row0 row1 ... ],[column0, column1, ...])  The second file extracts the actual values of the bicluster from the dataset. Its format is as follows:  BC[bicluster_number] [number_of_rows x number_of columns]\nExtracted part of the input dataset with rows and columns labels of the bicluster.", 
            "title": "Outputs"
        }, 
        {
            "location": "/examples/", 
            "text": "Examples\n\n\nThe only parameter required in order to run EvoBic is input file.\nAll other parameters are optional and could be modified by overriding a specific parameter.\n\n\nTo see available options:\n\n\n./evobic -h\n\n\n\n\nRun EvoBic for 10 iterations and return 5 biclusters only:\n\n\n./evobic -i input.txt -n 10 -b 5\n\n\n\n\nDo not allow negative trends:\n\n\n./evobic -i input.txt -m 0\n\n\n\n\nDo not allow approximate trends:\n\n\n./evobic -i input.txt -a 1", 
            "title": "Examples"
        }, 
        {
            "location": "/examples/#examples", 
            "text": "The only parameter required in order to run EvoBic is input file.\nAll other parameters are optional and could be modified by overriding a specific parameter.  To see available options:  ./evobic -h  Run EvoBic for 10 iterations and return 5 biclusters only:  ./evobic -i input.txt -n 10 -b 5  Do not allow negative trends:  ./evobic -i input.txt -m 0  Do not allow approximate trends:  ./evobic -i input.txt -a 1", 
            "title": "Examples"
        }, 
        {
            "location": "/releases/", 
            "text": "Version 0.1\n\n\nFirst public release of EvoBic.", 
            "title": "Release Notes"
        }, 
        {
            "location": "/releases/#version-01", 
            "text": "First public release of EvoBic.", 
            "title": "Version 0.1"
        }
    ]
}